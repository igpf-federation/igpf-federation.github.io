@if $nav-link-fullheight == true {
	$nav-link-padding-ver: 0.5 * ($nav-height - $nav-fontsize);
	$nav-link-padding-ver-xs: 0.5 * ($nav-height-xs - $nav-fontsize-xs);
}
$transition-nav-mobile: 0.3s all ease-out;

nav.nav-main {
	position: if($nav-fixed, fixed, absolute);
	top: 0;
	left: 0;
	right: 0;
	height: $nav-height;
	@include xs { height: $nav-height-xs; }
	background: $color-nav;
	font-size: 0;
	text-align: center;
	z-index: 10;
	max-width: 100vw;
	
	@if $nav-shadow == true {
		@include shadow(1);
	}

	@mixin link {		
		@include transition($transition-default);
		background: $color-navlink-bg;
		border-radius: if($rounded-corners, $border-radius, 0px);
		color: $color-navlink-text;
		cursor: pointer;
		display: inline-block;
		font-size: $nav-fontsize;
		line-height: 1;
		margin-left: $nav-link-spacing;
		margin-top: 0.5 * ($nav-height - $nav-fontsize - (2 * $nav-link-padding-ver));
		padding: $nav-link-padding-ver $nav-link-padding-hor;
		padding: ($nav-link-padding-ver + 1px) $nav-link-padding-hor ($nav-link-padding-ver - 1px - 3px);
		position: relative;
		
		@include bp(md, min) {
			border-bottom: 3px solid transparent;
			&.active { border-color: white; }
		}

		@include bp(sm, max) {
			text-align: left;
			display: block;
			width: 100%;
			border-top: 1px solid rgba(black, 0.15);

			&:first-child { border: 0; }
		}

		@include xs {
			font-size: $nav-fontsize-xs;
			margin: ($nav-link-spacing-xs / 2);
			padding: $nav-link-padding-ver-xs;
		}
		@include sm {
			margin: ($nav-link-spacing / 2);
			padding: $nav-link-padding-ver;
			padding-left: map-get($gutter-width-bp, sm);
		}

		&:hover,
		&:active {
			background: $color-navlink-bg-hover;
			color: $color-navlink-text-hover;
		}

		&:visited {
			//color: $color-navlink-text;
		}

		&.active {
			color: white;
		}
	}

	.links {
		min-height: 100%;
		position: absolute;	
		@each $bp, $val in $gutter-width-bp {
			@include bp($bp, only) {
				right: if($nav-fullwidth, $val, $val / 2);
			}
		}
		top: 0;

		a.link {
			@include link;
		}

		&:not(.active) a.link {
			color: white;
		}

		@include bp(sm, max) {					
			@include transform(translateY(-110%));
			@include transition($transition-nav-mobile);
			@if $nav-shadow == true { @include shadow(2); }
			transition-property: transform;
			background: toblack($color-nav, 0.1);
			left: 0;
			position: absolute;
			right: 0;					
			z-index: -1;
			
			// padding: $nav-link-padding-ver;
			top: $nav-height;
			@include xs {
				// padding: $nav-link-padding-ver-xs;
				top: $nav-height-xs;
			}

			&.open {
				@include transform(translateY(0%));
			}
		}

		//hacky
		@include sm {
			.button-linebreak-help {
				// width: 500px;
				// margin-left: auto;
				// margin-right: auto;
			}
		}
	}

	.logo {
		@include transition($transition-default);
		@each $bp, $val in $gutter-width-bp {
			@include bp($bp, only) {
				left: if($nav-fullwidth or $bp == xs, $val, $val / 2);
			}
		}
		position: absolute;
		top: 0;

		img {
			height: $nav-logo-height;
			margin-top: 0.5 * ($nav-height - $nav-logo-height);

			@include xs {
				height: $nav-logo-height-xs;
				margin-top: 0.5 * ($nav-height-xs - $nav-logo-height-xs);
			}
		}
	}

	.for-mobile-only {
		@include bp(md) { display: none !important; }

		.overlay {
			background: $color-nav;
			bottom: 0;
			left: 0;
			position: absolute;
			right: 0;
			top: 0;
			@include shadow(1);
		}

		.dark {
			content: '';
			z-index: -2;
			position: fixed;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			background: tr(0.5);
			display: none;
		}

		button.menu {
			position: absolute;
			@each $bp, $val in $gutter-width-bp {
				@include bp($bp, only) {
					right: if($nav-fullwidth, $val, $val / 2);
					right: $val;
				}
			}
			top: 0;
			border: 0 !important;
			outline: 0 !important;

			&.text {

				&:before,
				&:after {
					@include link;
					@include transition($transition-nav-mobile);
					cursor: pointer;
					position: absolute;
					right: 0;
					text-align: center;
					top: 0;
					width: 4.5em;
					margin-top: 0.5 * ($nav-height-xs - $nav-fontsize-xs - (2 * $nav-link-padding-ver-xs)) !important;
					margin-right: 0 !important;
				}

				&:before {
					content: 'Menu';
					opacity: 1;
				}

				&:after {
					content: 'Close';
					opacity: 0;
				}

				&.open:before {
					opacity: 0;
				}

				&.open:after {
					opacity: 1;
				}
			}

			&.burger {			
				@include burger(
					$padding: 10px,
					$layer-height: 3px,
					$layer-width: 30px,
					$color: white,
					$transition-duration: 0.4s
				);

				@include transform(translateY(-50%));
				position: absolute;
				top: 50%;
				margin-right: -10px;
			}

			&:not(.burger) > span {
				display: none;
			}
		}
	}
}

.container-nav {
	@if $nav-fullwidth == true {
		@extend .container-fluid;
	} @else {
		@extend .container;
	}
	@include sm {
		width: 100%;
	}
	position: relative;
	height: 100%;
	max-width: 100%; // overrides max-width for xs
}

// body.home {
// 	nav.nav-main {
// 		&, & * {			
// 			transition: 0.2s all linear;
// 			transition-duration: 0.2s;
// 			transition-timing-function: linear;
// 			transition-property: background, transform, box-shadow, opacity;
// 		}
// 	}
// }

// body.home:not(.not-at-top), body.notfound {
// 	nav.nav-main {
// 		background: transparent;
// 		box-shadow: none;

// 		@include xs {
// 			transform: translateY(-$nav-height-xs);

// 			.links {
// 				transform: translateY(60px);
// 				background: transparent;
// 				box-shadow: none;
// 			}
// 		}
// 	}
// }

// body.home:not(.not-at-top) {
// 	nav.nav-main .logo {
// 		opacity: 0;
// 	}
// }

